#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
# write.table(count.users, file='count.users', append=T, quote=F, row.names=F, sep=",")
}
count.users
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
# write.table(count.users, file='count.users', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.2', append=T, quote=F, row.names=F, sep=",")
}
warnings()
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=3, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.3', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=4, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.4', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=5, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.5', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.2', append=T, quote=F, row.names=F, sep=",")
}
?sum
howmany_ngram <- function(word, row, n=1) {
print(word)
sum(unlist(lapply(row, function(x) grepl(word, x))))/length(row)*100
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.2.per', append=T, quote=F, row.names=F, sep=",")
}
howmany_ngram <- function(word, row, n=1) {
print(word)
round(sum(unlist(lapply(row, function(x) grepl(word, x))))/length(row)*100)
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.2.per', append=T, quote=F, row.names=F, sep=",")
}
howmany_ngram <- function(word, row, n=1) {
print(word)
round(sum(unlist(lapply(row, function(x) grepl(word, x))))/length(row)*100)
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.2.per', append=T, quote=F, row.names=F, sep=",")
}
round(82.35)
trunc(82.34)
howmany_ngram <- function(word, row, n=1) {
print(word)
trunc(sum(unlist(lapply(row, function(x) grepl(word, x))))/length(row)*100)
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.2.per', append=T, quote=F, row.names=F, sep=",")
}
howmany_ngram <- function(word, row, n=1) {
print(word)
result <- sum(unlist(lapply(row, function(x) grepl(word, x))))/length(row)*100
trunc(result)
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.2.per', append=T, quote=F, row.names=F, sep=",")
}
howmany_ngram <- function(word, row, n=1) {
#  print(word)
result <- sum(unlist(lapply(row, function(x) grepl(word, x))))/length(row)*100
print(trunc(result))
trunc(result)
}
for(i in 1:1) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
#  write.table(count.users, file='count.users.2.per', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:1) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.2.per', append=T, quote=F, row.names=F, sep=",")
}
howmany_ngram <- function(word, row, n=1) {
#  print(word)
result <- sum(unlist(lapply(row, function(x) grepl(word, x))))/length(row)*100
trunc(result)
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.per.2', append=T, quote=F, row.names=F, sep=",")
}
data.2 <- read.csv('count.users.2')[c(TRUE,FALSE)]
data.2 <- readlines('count.users.2')
??readlines
library(readr)
data.2 <- read_lines('count.users.2')
data.2[1]
data.2[2]
2 % 2
data.2.p <- data.2[c(TRUE,FALSE)]
data.2.p[2]
length(data.2.p)
length(data.2.p[1])
length(unlist(data.2.p))
data.2.p
unlist(data.2.p)
?strsplit
strsplit("ashish,is,going", ',')
unlist(lapply(data.2.p, strsplit, ','))
data.2.c <- data.2[c(FALSE,TRUE)]
df.2     <- data.frame(p=unlist(lapply(data.2.p, strsplit, ',')),
c=unlist(lapply(data.2.c, strsplit, ',')))
library(readr)
for(i in 1:5){
data.all   <- read_lines(paste0('count.users.',i))
data.all.p <- data.all[c(TRUE,FALSE)]
data.all.c <- data.all[c(FALSE,TRUE)]
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ',')))
write.csv(df, paste0('df.',i))
}
for(i in 1:5){
data.all   <- read_lines(paste0('count.users.',i))
data.all.p <- data.all[c(TRUE,FALSE)]
data.all.c <- data.all[c(FALSE,TRUE)]
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ',')))
write.csv(df, paste0('df.',i))
}
howmany_ngram <- function(word, row, n=1) {
#  print(word)
sum(unlist(lapply(row, function(x) grepl(word, x))))
#  result <- sum(unlist(lapply(row, function(x) grepl(word, x))))/length(row)*100
#  trunc(result)
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=3, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.3', append=T, quote=F, row.names=F, sep=",")
}
library(plyr)
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=3, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.3', append=T, quote=F, row.names=F, sep=",")
}
for(i in 3:3){
data.all   <- read_lines(paste0('count.users.',i))
data.all.p <- data.all[c(TRUE,FALSE)]
data.all.c <- data.all[c(FALSE,TRUE)]
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ',')))
write.csv(df, paste0('df.',i))
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=3, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.3', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:5){
data.all   <- read_lines(paste0('count.users.',i))
data.all.p <- data.all[c(TRUE,FALSE)]
data.all.c <- data.all[c(FALSE,TRUE)]
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ',')))
write.csv(df, paste0('df.',i))
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=4, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.4', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:5){
data.all   <- read_lines(paste0('count.users.',i))
data.all.p <- data.all[c(TRUE,FALSE)]
data.all.c <- data.all[c(FALSE,TRUE)]
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ',')))
write.csv(df, paste0('df.',i))
}
library(dplyr)
for(i in 1:5){
data.all   <- read_lines(paste0('count.users.',i))
data.all.p <- data.all[c(TRUE,FALSE)]
data.all.c <- data.all[c(FALSE,TRUE)]
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ','))) %>% (c)
write.csv(df, paste0('df.',i))
}
?write.csv
for(i in 1:5){
data.all   <- read_lines(paste0('count.users.',i))
data.all.p <- data.all[c(TRUE,FALSE)]
data.all.c <- data.all[c(FALSE,TRUE)]
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ','))) %>% arrange(c)
write.csv(df, paste0('df.',i), quote=F, row.names=F)
}
for(i in 1:5){
data.all   <- read_lines(paste0('count.users.',i))
data.all.p <- data.all[c(TRUE,FALSE)]
data.all.c <- data.all[c(FALSE,TRUE)]
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ','))) %>% arrange(as.numeric(c))
write.csv(df, paste0('df.',i), quote=F, row.names=F)
}
?data.frame
for(i in 1:5){
data.all   <- read_lines(paste0('count.users.',i))
data.all.p <- data.all[c(TRUE,FALSE)]
data.all.c <- data.all[c(FALSE,TRUE)]
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ','))) %>% mutate_each(funs(as.numeric), c) %>%
arrange(c)
write.csv(df, paste0('df.',i), quote=F, row.names=F)
}
for(i in 1:1){
data.all   <- read_lines(paste0('count.users.',i))
;
}
i <- 1
data.all   <- read_lines(paste0('count.users.',i))
data.all.p <- data.all[c(TRUE,FALSE)]
data.all.c <- data.all[c(FALSE,TRUE)]
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ',')))
?data.frame
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ',')), stringsAsFactors=F)
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ',')), stringsAsFactors=F) %>%
mutate_each(funs(as.numeric), c)
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ',')), stringsAsFactors=F) %>%
mutate_each(funs(as.numeric), c) %>%
arrange(c)
write.csv(df, paste0('df.',i), quote=F, row.names=F)
for(i in 1:5){
data.all   <- read_lines(paste0('count.users.',i))
data.all.p <- data.all[c(TRUE,FALSE)]
data.all.c <- data.all[c(FALSE,TRUE)]
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ',')), stringsAsFactors=F) %>%
mutate_each(funs(as.numeric), c) %>%
arrange(c)
write.csv(df, paste0('df.',i), quote=F, row.names=F)
}
library(ggplot2)
library(grid)
library(gridExtra)
i <- 1
df <- read.csv(paste0('df.',i))
qplot(as.numeric(df$c), geom='histogram', ylim=c(0,20), main=i)
df$c
?qplot
names(df$c)
unique(df$c)
qplot(df$c, geom='histogram', ylim=c(0,30), xlim=c(0,max(df$c)),
xlab=unique(df$c), main=i)
df <- read.csv(paste0('df.',i), stringsAsFactors=F)
qplot(df$c, geom='histogram', ylim=c(0,30), xlim=c(0,max(df$c)),
xlab=unique(df$c), main=i)
qplot(df$c, geom='histogram', ylim=c(0,30), xlim=c(0,max(df$c)),
xlab=unique(df$c), main=i)
qplot(df$c, geom='histogram')
qplot(df$c, geom='histogram', binwidth=.2)
qplot(df$c, geom='histogram', binwidth=.5)
for(i in 1:5) {
df <- read.csv(paste0('df.',i), stringsAsFactors=F)
plots[[i]] <- qplot(df$c, geom='histogram', main=i)
}
multiplot(plotlist = plots, cols = 2)
plots
qplot(df$c, geom='histogram', main=i, xlab='#Speakers')
for(i in 1:5) {
df <- read.csv(paste0('df.',i), stringsAsFactors=F)
qplot(df$c, geom='histogram', main=i, xlab='#Speakers', ylab='#n-grams')
}
for(i in 1:5) {
df <- read.csv(paste0('df.',i), stringsAsFactors=F)
qplot(df$c, geom='histogram', main=i, xlab='#Speakers', ylab='#n-grams')
}
df <- read.csv(paste0('df.1'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='1-gram', xlab='#Speakers', ylab='#1-grams')
df <- read.csv(paste0('df.2'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='2-gram', xlab='#Speakers', ylab='#2-grams')
?qplot
df <- read.csv(paste0('df.1'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='1-gram', xlab='#Speakers', ylab='#1-grams')
df <- read.csv(paste0('df.1'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='1-gram', xlab='#Speakers', ylab='#1-grams', binwidth=.4)
df <- read.csv(paste0('df.1'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='1-gram', xlab='#Speakers', ylab='#1-grams', binwidth=.2)
df <- read.csv(paste0('df.2'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='2-gram', xlab='#Speakers', ylab='#2-grams', binwidth=.2)
df <- read.csv(paste0('df.3'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='3-gram', xlab='#Speakers', ylab='#3-grams', binwidth=.2)
df <- read.csv(paste0('df.4'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='4-gram', xlab='#Speakers', ylab='#4-grams', binwidth=.2)
df <- read.csv(paste0('df.5'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='5-gram', xlab='#Speakers', ylab='#5-grams', binwidth=.2)
source('speech-head.R')
library(plyr)
file.speech_text <- 'D:\\Personal\\PhD\\Speech to text\\speech-text-data\\MSA-Results.tsv'
data.speech_text <- read.delim(file.speech_text, quote="", stringsAsFactors=F)
data.speech_text <- data.speech_text[, c(6,8)]
data.speech_text <- as.data.frame(sapply(data.speech_text, function(x) gsub("[[:punct:]]", "", x)), stringsAsFactors=F)
data.speech_text <- as.data.frame(sapply(data.speech_text, tolower), stringsAsFactors=F)
library(ngram)
howmany_ngram <- function(word, row, n=1) {
#  print(word)
sum(unlist(lapply(row, function(x) grepl(word, x))))
#  result <- sum(unlist(lapply(row, function(x) grepl(word, x))))/length(row)*100
#  trunc(result)
}
counter_ngram <- function(data.row, n=1) {
data.actual       <- data.row[1,1]
ng                <- ngram(data.actual, n=n)
data.actual.words <- get.ngrams(ng)
result.df <- as.data.frame(lapply(data.actual.words, howmany_ngram, data.row[, -1], n))
colnames(result.df)=data.actual.words
return(result.df)
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=1, .expand=F)
#  print(count.users)
write.table(count.users, file='count.msa.1', append=T, quote=F, row.names=F, sep=",")
}
warnings()
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
write.table(count.users, file='count.msa.2', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=3, .expand=F)
#  print(count.users)
write.table(count.users, file='count.msa.3', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=4, .expand=F)
#  print(count.users)
write.table(count.users, file='count.msa.4', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=5, .expand=F)
#  print(count.users)
write.table(count.users, file='count.msa.5', append=T, quote=F, row.names=F, sep=",")
}
library(readr)
library(dplyr)
for(i in 1:5){
data.all   <- read_lines(paste0('count.msa.',i))
data.all.p <- data.all[c(TRUE,FALSE)]
data.all.c <- data.all[c(FALSE,TRUE)]
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ',')), stringsAsFactors=F) %>%
mutate_each(funs(as.numeric), c) %>%
arrange(c)
write.csv(df, paste0('df.msa.',i), quote=F, row.names=F)
}
library(ggplot2)
library(grid)
library(gridExtra)
df <- read.csv(paste0('df.msa.1'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='1-gram', xlab='MSA', ylab='#1-grams', binwidth=.2)
?qplot
qplot(df$c, geom='histogram', main='1-gram', xlab='MSA', ylab='#1-grams', binwidth=.2, xlim=c(0,1))
qplot(df$c, geom='histogram', main='1-gram', xlab='MSA', ylab='#1-grams', binwidth=.2, xlim=c(0,2))
df <- read.csv(paste0('df.msa.2'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='2-gram', xlab='MSA', ylab='#2-grams', binwidth=.2, xlim=c(0,2))
df <- read.csv(paste0('df.msa.3'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='3-gram', xlab='MSA', ylab='#3-grams', binwidth=.2, xlim=c(0,2))
df <- read.csv(paste0('df.msa.4'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='4-gram', xlab='MSA', ylab='#4-grams', binwidth=.2, xlim=c(0,2))
df <- read.csv(paste0('df.msa.5'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='5-gram', xlab='MSA', ylab='#5-grams', binwidth=.2, xlim=c(0,2))
source('speech-head.R')
library(plyr)
file.speech_text <- 'D:\\Personal\\PhD\\Speech to text\\speech-text-data\\Speech-text data - English.tsv'
data.speech_text <- read.delim(file.speech_text, quote="", stringsAsFactors=F)
data.speech_text <- as.data.frame(sapply(data.speech_text, function(x) gsub("[[:punct:]]", "", x)), stringsAsFactors=F)
data.speech_text <- as.data.frame(sapply(data.speech_text, tolower), stringsAsFactors=F)
library(ngram)
howmany_ngram <- function(word, row, n=1) {
#  print(word)
#  sum(unlist(lapply(row, function(x) grepl(word, x))))
result <- sum(unlist(lapply(row, function(x) grepl(word, x))))/length(row)*100
trunc(result)
}
counter_ngram <- function(data.row, n=1) {
data.actual       <- data.row[1,1]
ng                <- ngram(data.actual, n=n)
data.actual.words <- get.ngrams(ng)
result.df <- as.data.frame(lapply(data.actual.words, howmany_ngram, data.row[, -1], n))
colnames(result.df)=data.actual.words
return(result.df)
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=1, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.per.1', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.per.2', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=3, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.per.3', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=4, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.per.4', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=5, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.per.5', append=T, quote=F, row.names=F, sep=",")
}
for(i in 1:25) {
#  count.users <- counter_ngram(data.speech_text[i,], n=2)
count.users <- adply(data.speech_text[i,], 1, counter_ngram, n=2, .expand=F)
#  print(count.users)
write.table(count.users, file='count.users.per.2', append=T, quote=F, row.names=F, sep=",")
}
library(readr)
library(dplyr)
for(i in 1:5){
data.all   <- read_lines(paste0('count.users.',i))
data.all.p <- data.all[c(TRUE,FALSE)]
data.all.c <- data.all[c(FALSE,TRUE)]
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ',')), stringsAsFactors=F) %>%
mutate_each(funs(as.numeric), c) %>%
arrange(c)
write.csv(df, paste0('df.per.',i), quote=F, row.names=F)
}
for(i in 1:5){
data.all   <- read_lines(paste0('count.users.per.',i))
data.all.p <- data.all[c(TRUE,FALSE)]
data.all.c <- data.all[c(FALSE,TRUE)]
df         <- data.frame(p=unlist(lapply(data.all.p, strsplit, ',')),
c=unlist(lapply(data.all.c, strsplit, ',')), stringsAsFactors=F) %>%
mutate_each(funs(as.numeric), c) %>%
arrange(c)
write.csv(df, paste0('df.per.',i), quote=F, row.names=F)
}
library(ggplot2)
library(grid)
library(gridExtra)
df <- read.csv(paste0('df.per.1'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='1-gram', xlab='#Speakers', ylab='#1-grams', binwidth=.2)
qplot(df$c, geom='histogram', main='1-gram', xlab='#Speakers', ylab='#1-grams')
qplot(df$c, geom='histogram', main='1-gram', xlab='#Speakers', ylab='#1-grams', binwidth=.3)
qplot(df$c, geom='histogram', main='1-gram', xlab='#Speakers', ylab='#1-grams', binwidth=.4)
?qplot
qplot(df$c, geom='histogram', main='1-gram', xlab='% Speakers', ylab='#1-grams', binwidth=.4)
df <- read.csv(paste0('df.per.2'), stringsAsFactors=F)
qplot(df$c, geom='histogram', main='2-gram', xlab='% Speakers', ylab='#2-grams', binwidth=.4)
